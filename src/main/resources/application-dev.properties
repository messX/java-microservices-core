server.port=8081
spring.jpa.hibernate.ddl-auto=none
# db setup
spring.datasource.url=jdbc:postgresql://localhost:5432/main
spring.datasource.username=postgres
spring.datasource.password=password

# actuator confs
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true

## Circuit Breaker Configuration
circuitbreaker.testname=myProjectAllRemoteCallsCB
DEFAULT_CIRCUIT_BREAKER_REGISTRY=DEFAULT_CIRCUIT_BREAKER_REGISTRY


spring.cloud.circuitbreaker.resilience4j.enabled=true
#resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.myProjectAllRemoteCallsCB.baseConfig=default
resilience4j.circuitbreaker.instances.myProjectAllRemoteCallsCB.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.myProjectAllRemoteCallsCB.slidingWindowSize=2
resilience4j.circuitbreaker.instances.myProjectAllRemoteCallsCB.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.myProjectAllRemoteCallsCB.permittedNumberOfCallsInHalfOpenState=4
resilience4j.circuitbreaker.instances.myProjectAllRemoteCallsCB.minimumNumberOfCalls=2
resilience4j.circuitbreaker.instances.myProjectAllRemoteCallsCB.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.myProjectAllRemoteCallsCB.slowCallRateThreshold=50
resilience4j.circuitbreaker.instances.myProjectAllRemoteCallsCB.slowCallDurationThreshold=10
resilience4j.circuitbreaker.instances.myProjectAllRemoteCallsCB.failureRateThreshold=50
#
#
## Retry Configuration
resilience4j.retry.instances.myRetry.maxRetryAttempts=3
resilience4j.retry.instances.myRetry.waitDuration=500ms
#
## Rate Limiter Configuration
resilience4j.ratelimiter.instances.myRateLimiter.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.myRateLimiter.limitForPeriod=5
#
## TimeLimiter Configuration
resilience4j.timelimiter.instances.myTimeLimiter.timeoutDuration=2s
